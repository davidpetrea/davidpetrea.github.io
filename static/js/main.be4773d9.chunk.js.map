{"version":3,"sources":["Components/Header.js","Components/Showcase.js","Components/Nav_Item.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","href","Showcase","NavItem","props","link","name","Navbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wNAiCeA,MA/Bf,WACI,OACI,yBAAKC,UAAU,uBACX,yBAAKA,UAAU,OACZ,yBAAKA,UAAU,qBACV,uBAAGA,UAAU,iBAAb,oBACA,yBAAKA,UAAU,iBAAiBC,IAAI,wBAIxC,yBAAKD,UAAU,2BACX,uBAAGE,KAAK,cAAa,yBAAKF,UAAU,OAAOC,IAAI,8BAGnD,yBAAKD,UAAU,2BACX,yBAAKA,UAAU,YACX,4BAAQA,UAAU,gBAAlB,SACA,0BAAMA,UAAU,WAAhB,MACA,4BAAQA,UAAU,iBAAlB,YAGJ,yBAAKA,UAAU,OAAOC,IAAI,2BCF/BE,MAnBf,WACI,OACA,yBAAKH,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BAEX,yBAAKA,UAAU,qBAAf,yBAC0B,6BAD1B,sBAGA,yBAAKA,UAAU,uBAAf,uDACwD,6BADxD,2CACqG,6BADrG,6DCEDI,MAXf,SAAiBC,GAGb,OACI,yBAAKL,UAAU,YACX,uBAAGE,KAAMG,EAAMC,MAAM,6BAAMD,EAAME,SCW9BC,MAff,WACI,OACI,yBAAKR,UAAU,uBACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAASO,KAAK,OAAOD,KAAK,eAC1B,kBAAC,EAAD,CAASC,KAAK,WAAWD,KAAK,eAC9B,kBAAC,EAAD,CAASC,KAAK,QAAQD,KAAK,eAC3B,kBAAC,EAAD,CAASC,KAAK,UAAUD,KAAK,iBAC7B,kBAAC,EAAD,CAASC,KAAK,WAAWD,KAAK,kBAC9B,kBAAC,EAAD,CAASC,KAAK,QAAQD,KAAK,kB,KCK5BG,MAXf,WACE,OACE,yBAAKT,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.be4773d9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header(){\r\n    return(\r\n        <div className=\"container my-header\">\r\n            <div className=\"row\">\r\n               <div className=\"col-md-4 gamelist\">\r\n                    <p className=\"gamelist-text\">Choose your game</p>\r\n                    <img className=\"gamelist-arrow\" src=\"./images/arrow.png\"/>\r\n               </div>\r\n               \r\n               \r\n                <div className=\"col-8 col-sm-8 col-md-4\">\r\n                    <a href=\"index.html\"><img className=\"logo\" src=\"./images/plugynLogo.png\"/></a>\r\n                </div>\r\n\r\n                <div className=\"col-4 col-sm-4 col-md-4\">\r\n                    <div className=\"loginBox\">\r\n                        <button className=\"login-button\">LOGIN</button>\r\n                        <span className=\"or-span\">or</span>\r\n                        <button className=\"signup-button\">SIGN UP</button>\r\n                    </div>\r\n                    \r\n                    <img className=\"menu\" src=\"./images/arrow.png\"/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Showcase(){\r\n    return(\r\n    <div className=\"container my-showcase\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 showcase-container\">\r\n                \r\n                <div className=\"showcase-big-text\">\r\n                    EASY, FAST and SECURE <br/> BOOSTING SERVICES\r\n                </div>\r\n                <div className=\"showcase-small-text\">\r\n                    Get the most prestigious achieves loot and progress.<br/> Make your characters overpowered today!<br/> Get the most prestigious achieves loot and progress.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Showcase","import React from \"react\"\r\n\r\nfunction NavItem(props){\r\n\r\n\r\n    return(\r\n        <div className=\"col-md-2\">\r\n            <a href={props.link}><div>{props.name}</div></a> \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NavItem","import React from \"react\"\r\nimport NavItem from \"./Nav_Item\"\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <div className=\"container my-navbar\">\r\n            <div className=\"row\">\r\n                <NavItem name=\"HOME\" link=\"index.html\"/>\r\n                <NavItem name=\"ABOUT US\" link=\"about.html\"/>\r\n                <NavItem name=\"STORE\" link=\"store.html\"/>\r\n                <NavItem name=\"CONTACT\" link=\"contact.html\"/>\r\n                <NavItem name=\"BOOSTERS\" link=\"boosters.html\"/>\r\n                <NavItem name=\"TERMS\" link=\"terms.html\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport Header from \"./Components/Header\";\nimport Showcase from \"./Components/Showcase\";\nimport Navbar from \"./Components/Navbar\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <Header />\n      <Navbar />\n      <Showcase />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}